pack_sum <- summarize(by_package, count = n(), unique = n_distinct(ip_id), countries= n_distinct(country), avg_bytes = mean(size))
submit()
source('~/.active-rstudio-document')
pack_sum <- summarize(by_package, count = n(), unique = n_distinct(ip_id), countries= n_distinct(country), avg_bytes = mean(size))
submit()
pack_sum
stop()
end()
play()
nxt()
help
?commands
commands
swirl_help
stop
?
quit
quit
info()
bye()
read.table("UCI HAR Dataset/test/subject_test.txt") -> subject_test
View(subject_test)
read.table("UCI HAR Dataset/test/X_test.txt") -> x_test
read.table("UCI HAR Dataset/test/Y_test.txt") -> y_test
read.table("UCI HAR Dataset/train/X_train.txt") -> x_train
read.table("UCI HAR Dataset/train/Y_train.txt") -> y_train
read.table("UCI HAR Dataset/train/subject_train.txt") -> subject_train
30*561
2947/6
read.table("UCI HAR Dataset/features.txt) -> features
""
)
ds
terminate
error
stop()
kill()
3
23j
)
""
read.table("UCI HAR Dataset/features.txt") -> features
read.table("UCI HAR Dataset/activity_labels.txt") -> activity_labels
View(subject_train)
View(features)
View(subject_test)
View(x_test)
View(y_test)
summary(y_test)
View(activity_labels)
?cbind
test_data <- cbind(subject_test, x_test, y_test)
library(dplyr)
test_data
View(test_data)
View(features)
?summarize
train_data <- cbind(subject_train, x_train, y_train)
rm(subject_test, x_test, y_test, subject_train, x_train, y_train)
View(features)
full_features <- rbind(features, "subject")
View(full_features)
full_features <- rbind(features, 563, "subject")
View(full_features)
full_features <- rbind(features, c(563, "subject"))
View(full_features)
class(features[2,2])
class(features[2,1])
subject <- "subject"
class(subject) <- factor
?factor
factor("subject")
subject <- factor("subject")
full_features <- rbind(features, c(563, subject))
View(full_features)
subject
as.factor("subject")
x_test <- read.table("UCI HAR Dataset/test/X_test.txt")
y_test <- read.table("UCI HAR Dataset/test/y_test.txt")
subject_test <- read.table("UCI HAR Dataset/test/subject_test.txt")
x_train <- read.table("UCI HAR Dataset/train/X_train.txt")
y_train <- read.table("UCI HAR Dataset/train/y_train.txt")
subject_train <- read.table("UCI HAR Dataset/train/subject_train.txt")
test_data <- cbind(subject_test, x_test, y_test)
train_data <- cbind(subject_train, x_train, y_train)
rm(subject_test, x_test, y_test, subject_train, x_train, y_train)
library(dplyr)
?merge
merged_data <- merge(test_data, train_data)
View(train_data)
merged_data <- merge(test_data, train_data, by = "V1")
merged_data <- cbind(test_data, train_data)
merged_data <- rbind(test_data, train_data)
?stop
if (file.exists("UCI HAR Dataset/") != TRUE){
stop("UCI HAR Dataset folder is not in working directory")
}
file.exists("UCI HAR Dataset/")
file.exists("UCI HAR Dataset")
if (file.exists("UCI HAR Dataset") != TRUE){
stop("UCI HAR Dataset folder is not in working directory")
}
if (file.exists("UCI HAR Dataset/") != TRUE){
stop("UCI HAR Dataset folder is not in working directory", "Unzip the data in your working dir or change directories")
}
merged_data <- rbind(test_data, train_data)
feature_table <- read.table("UCI HAR Dataset/features.txt")
feature_table[,"mean"]
%in%
?%in%
column_numbers <- c(1:6, 41:46, 81:86, 121:126, 161:166, 201, 202, 214, 215, 227, 228, 240, 241, 253, 254, 266:271, 345:350, 424:429, 503, 504, 516, 517)
selected_data <- merged_data[,column_numbers]
length(column_numbers)
View(selected_data)
if (file.exists("UCI HAR Dataset") != TRUE){
stop("UCI HAR Dataset folder is not in working directory")
}
x_test <- read.table("UCI HAR filDataset/test/X_test.txt")
y_test <- read.table("UCI HAR Dataset/test/y_test.txt")
subject_test <- read.table("UCI HAR Dataset/test/subject_test.txt")
x_train <- read.table("UCI HAR Dataset/train/X_train.txt")
y_train <- read.table("UCI HAR Dataset/train/y_train.txt")
subject_train <- read.table("UCI HAR Dataset/train/subject_train.txt")
## Next it combines the x files, y files, and subject files together
x_data <- rbind(x_test, x_train)
y_data <- rbind(y_test, y_train)
subject_data <- rbind(subject_test, subject_train)
x_test <- read.table("UCI HAR fileDataset/test/X_test.txt")
x_test <- read.table("UCI HAR Dataset/test/X_test.txt")
x_data <- rbind(x_test, x_train)
y_data <- rbind(y_test, y_train)
rm(subject_test, x_test, y_test, subject_train, x_train, y_train)
selc_x_data <- x_data[,column_numbers]
column_numbers <- c(1:6, 41:46, 81:86, 121:126, 161:166, 201, 202, 214, 215, 227, 228, 240, 241, 253, 254, 266:271, 345:350, 424:429, 503, 504, 516, 517)
selc_x_data <- x_data[,column_numbers]
View(selc_x_data)
?col_names
col_name
?col_name
?colnames
colnames(selc_x_data)
feature_list <- read.table("UCI HAR Dataset/features.txt")
column_names <- feature_list(column_numbers, 2)
column_names <- feature_list[column_numbers, 2]
column_names <- feature_list[, 2]
column_names <- feature_list[1, 2]
column_names <- feature_list[2, 2]
class(feature_list)
feature_list[1,4]
feature_list[1,2]
feature_list[3,2]
as.character(feature_list[3,2])
column_names <- as.character(feature_list[column_numbers, 2])
colnames(selc_x_data) <- column_names
View(selc_x_data)
colnames(y_data) <- "Activity"
colnames(subject_data) <- "Subject ID"
View(subject_data)
View(y_data)
if (file.exists("UCI HAR Dataset") != TRUE){
stop("UCI HAR Dataset folder is not in working directory")
}
x_test <- read.table("UCI HAR Dataset/test/X_test.txt")
y_test <- read.table("UCI HAR Dataset/test/y_test.txt")
subject_test <- read.table("UCI HAR Dataset/test/subject_test.txt")
x_train <- read.table("UCI HAR Dataset/train/X_train.txt")
y_train <- read.table("UCI HAR Dataset/train/y_train.txt")
subject_train <- read.table("UCI HAR Dataset/train/subject_train.txt")
## Next it combines the x files, y files, and subject files together
x_data <- rbind(x_test, x_train)
y_data <- rbind(y_test, y_train)
subject_data <- rbind(subject_test, subject_train)
# then to keep things clean we eliminate the original, unmerged files
rm(subject_test, x_test, y_test, subject_train, x_train, y_train)
# next we take just the mean and standard deviation data
# I decided that only means of raw data would be considered, ie it says mean at the end.
# to find the correct columns I just looked at the raw data, and made a note
# of anything ending in mean or std. The following are the column numbers
column_numbers <- c(1:6, 41:46, 81:86, 121:126, 161:166, 201, 202, 214, 215, 227, 228, 240, 241, 253, 254, 266:271, 345:350, 424:429, 503, 504, 516, 517)
selc_x_data <- x_data[,column_numbers]
############# this shouldn't be here but ive figuered it out
## to label the variables, I'll make a column_names vector containing the same
## names as the original data. I'll also add the subject and the activity column name
feature_list <- read.table("UCI HAR Dataset/features.txt")
column_names <- as.character(feature_list[column_numbers, 2])
colnames(selc_x_data) <- column_names
colnames(y_data) <- "Activity"
colnames(subject_data) <- "Subject ID"
library(dplyr)
summerize(selc_x_data)
summarise(selc_x_data)
summary(selc_x_data)
summary(y_data)
swirl()
library(swirl)
swirl()
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf", "feature_list", "selc_x_data", "subject_data", "x_data", "y_data")
rm("mydf")
cran
?group_by()
?group_by
by_package <- group_by(cran, by_package)
by_package <- group_by(cran)
by_package <- group_by(cran, package)
by_package
summarize(by_package, mean(size))
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum$count > 679)
?filter
top_counts <- filter(pack_sum, pack_sum$count > 679)
top_counts <- filter(pack_sum, count > 679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts, count)
top_counts_sorted <- arrange(top_counts, desc(count)
)
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique > 465)
View(top_unique)
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
?mutate
submit()
submit()
filter (size_mb <= 0.5)# Your call to filter() goes here
cran %>%
select(ip_id, country, package, size) %>%
mutate(size_mb = size / 2^20) %>%
filter (size_mb <= 0.5)# Your call to filter() goes here
submit()
submit()
print# Your call to arrange() goes here
cran %>%
select(ip_id, country, package, size) %>%
mutate(size_mb = size / 2^20) %>%
filter(size_mb <= 0.5) %>%
arrange(desc(size_mb))
print
submit
submit()
bye()
swirl()
mydf <- read.csv(path2csv, stringsAsFactors=FALSE)
dim(mydf)
head(df)
head(mydf)
library(dplyr)
package_version("dplyr")
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
select(cran, -5:20)
-5:20
-(5:20)
select(cran, -(X:size))
filter (cran, package =="swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, country == "IN", r_version == "3.0.2")
filter(cran, country == "IN", r_version <= "3.0.2")
filter(cran, country == "IN"| country == "US")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_gb <- size_mb / 2^10)
mutate(cran3, size_mb = size / 2^20, size_gb <- size_mb / 2^10)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
source('C:/Users/cferguson/Desktop/Coursera/get_and_clean_data/mergeddata.R')
rm("cran", "cran2", "cran3")
rm("size_gb", "path2csv")
clear
activities <- tbl_df(y_data)
activites
activities
?mutate
mutate(activities, name = if(activity==5) cycle)
mutate(activities, name = if(Activity==5) cycle)
activity_labels <- read.table("UCI HAR Dataset/activity_labels.txt")
activites_labeled <- merge(activity_labels, y_data)
View(activites_labeled)
activites_labeled <- merge(activity_labels, y_data, by.x="Activity")
View(y_data)
rm("activities_labeled")
View(activites_labeled)
rm(activites_labeled)
summary(activity_labels)
rm(activites)
rm(activities)
?colNames
?col_name
?colname
?colName
?colnames
colnames(activity_labels) <- c("Activity", "Name")
View(activity_labels)
activites_labeled <- merge(activity_labels, y_data, by.x="Activity")
View(activites_labeled)
summary(activites_labeled)
?merge
activites_labeled <- merge(activity_labels, y_data, by.x="Activity", sort=FALSE)
View(activites_labeled)
full_data <- cbind(subject_data, y_data, selc_x_data)
View(full_data)
full_data_named <- merge(activity_labels, full_data, by.x"Activity")
full_data_named <- merge(activity_labels, full_data, by.x="Activity")
View(full_data_named)
full_data_named <- merge(activity_labels, full_data, by="Activity")
View(full_data_named)
View(full_data)
colnames(activity_labels) <- c("Activity", "Activity Name")
full_data_named <- merge(activity_labels, full_data, by="Activity")
View(full_data_named)
clean_raw <- merge(activity_labels, full_data, by="Activity")
View(clean_raw)
rm(-clean_raw)
rm(-"clean_raw")
?rm
list = ls()
ls ()
list
select(list, "clean_raw")
list[-"clean_raw"]
rm(activites_labeled)
rm(activity_labels)
rm(feature_list)
rm(full_data)
rm(full_data_named)
rm(selc_x_data)
rm(subject_data)
rm(x_data)
rm(y_data)
CR_tbl_df <- tbl_df(clean_raw)
grouped_data <- group_by(Activity, Subject ID)
grouped_data <- group_by("Activity", "Subject ID")
grouped_data <- group_by("Activity")
?group_by
grouped_data <- group_by(Activity)
grouped_data <- group_by(CR_tbl_df, Activity, Subject ID)
grouped_data <- group_by(CR_tbl_df, Activity)
View(grouped_data)
grouped_data
summarize(grouped_data, tBodyAcc_Mean = mean(tBodyAcc-mean()-X))
summarize(grouped_data, tBodyAcc_Mean = mean(grouped_data$tBodyAcc-mean()-X))
?summarize
summarize(grouped_data, tBodyAcc_Mean = mean(Subject ID))
summarize(grouped_data, tBodyAcc_Mean = mean(Subject_ID))
source('~/.active-rstudio-document')
grouped_data <- group_by(CR_tbl_df, Activity)
summarize(grouped_data, tBodyAcc_Mean = mean(Subject_ID))
summarize(grouped_data, tBodyAcc_Mean = mean(tBodyAcc-mean()-X))
summarize(grouped_data, tBodyAcc_Mean = mean('tBodyAcc-mean()-X'))
class(group_data$'tBodyAcc-mean()-X')
class(grouped_data$'tBodyAcc-mean()-X')
mean(grouped_data$'tBodyAcc-mean()-X')
?mean
grouped_data <- group_by(CR_tbl_df, Activity_Name)
source('C:/Users/cferguson/Desktop/Coursera/get_and_clean_data/mergeddata.R')
summarize(grouped_data, tBodyAcc_Mean = mean(tBodyAcc_mean()_X))
summarize(grouped_data, tBodyAcc_Mean = mean('tBodyAcc_mean()_X'))
summarize(grouped_data, tBodyAcc_Mean = mean(Subject_ID)
)
summarize(grouped_data, tBodyAcc_Mean = mean(Activity))
summarize(grouped_data, tBodyAcc_Mean = mean(Activity_Name))
summarize(grouped_data, tBodyAcc_Mean = mean())
summarize(grouped_data, tBodyAcc_Mean = mean(grouped_data))
mean(grouped_data$tBodyAcc_mean()_X)
mean(grouped_data$'tBodyAcc_mean()_X')
summarize(grouped_data, tBodyAcc_Mean = mean('tBodyAcc_mean()_X'))
summarize(grouped_data, tBodyAcc_Mean = mean(grouped_data$'tBodyAcc_mean()_X'))
grouped2_data <- group_by(grouped_data, Subject_ID)
grouped2_data
?group_by
grouped2_data <- group_by(grouped_data, Activity_Name, Subject_ID)
View(grouped2_data)
grouped2_data
summarize(grouped_data, tBodyAcc_Mean = mean(grouped_data$'tBodyAcc_mean()_X'))
summarize(grouped2_data, tBodyAcc_Mean = mean(grouped2_data$'tBodyAcc_mean()_X'))
source('C:/Users/cferguson/Desktop/Coursera/get_and_clean_data/mergeddata.R')
summarize(grouped2_data, tBodyAcc_Mean = mean(tBodyAccmeanX)
)
View(grouped2_data)
summarize(grouped2_data, tBodyAcc_Mean = mean(tBodyAccmeanX))
summarize(grouped_data, tBodyAcc_Mean = mean(tBodyAccmeanX))
?summarize_each
?summarise_each
summarize_each(grouped_data, mean)
summarise_each(grouped_data, mean)
summarise_each(grouped_data, funs(mean))
grouped_data
summarise_each(grouped_data, funs(mean))
summarise_each(grouped_data, funs(mean)) -> meaned_data
View(meaned_data)
source('~/.active-rstudio-document')
clean_tidy
source('C:/Users/cferguson/Desktop/Coursera/get_and_clean_data/mergeddata.R')
## Course Project
# first step, is to make a cohert test and train data frame, currently they are split
# x_test contains the data set, y_test contains the activity #,
# referenced in the activity labels file
# subject_test contains the ID for which subject performed the activity
## the below commands read in the data,
## after checking for the UCI HAR dataset in the current WD
if (file.exists("UCI HAR Dataset") != TRUE){
stop("UCI HAR Dataset folder is not in working directory")
}
x_test <- read.table("UCI HAR Dataset/test/X_test.txt")
y_test <- read.table("UCI HAR Dataset/test/y_test.txt")
subject_test <- read.table("UCI HAR Dataset/test/subject_test.txt")
x_train <- read.table("UCI HAR Dataset/train/X_train.txt")
y_train <- read.table("UCI HAR Dataset/train/y_train.txt")
subject_train <- read.table("UCI HAR Dataset/train/subject_train.txt")
feature_list <- read.table("UCI HAR Dataset/features.txt")
activity_labels <- read.table("UCI HAR Dataset/activity_labels.txt")
## Next it combines the x files, y files, and subject files together
x_data <- rbind(x_test, x_train)
y_data <- rbind(y_test, y_train)
subject_data <- rbind(subject_test, subject_train)
# then to keep things clean we eliminate the original, unmerged files
rm(subject_test, x_test, y_test, subject_train, x_train, y_train, )
# next we take just the mean and standard deviation data
# I decided that only means of raw data would be considered, ie it says mean at the end.
# to find the correct columns I just looked at the raw data, and made a note
# of anything ending in mean or std. The following are the column numbers
column_numbers <- c(1:6, 41:46, 81:86, 121:126, 161:166, 201, 202, 214, 215, 227, 228, 240, 241, 253, 254, 266:271, 345:350, 424:429, 503, 504, 516, 517)
selc_x_data <- x_data[,column_numbers]
rm(x_data)
############# this shouldn't be here but ive figuered it out
## to label the variables, I'll make a column_names vector containing the same
## names as the original data. I'll also add the subject and the activity column name
column_names <- as.character(feature_list[column_numbers, 2])
colnames(selc_x_data) <- column_names
colnames(y_data) <- "Activity"
colnames(subject_data) <- "Subject_ID"
colnames(activity_labels) <- c("Activity", "Activity_Name")
full_data <- cbind(subject_data, y_data, selc_x_data)
rm(subject_data, y_data, selc_x_data, feature_list)
## Now that we have a data set combined with all data, we shall now add a column
## that will tell us what each observation is, ie it will convert the activity number
## to an activity name. This had to be done last, as the merge command reorders the data
clean_raw <- merge(activity_labels, full_data, by="Activity")
rm(full_data, activity_labels)
## here is the end of step 4. Now we need to create our TIDY data set. but first lets
## remove all the crap.
CR_tbl_df <- tbl_df(clean_raw)
rm(clean_raw)
grouped_data <- group_by(CR_tbl_df, Activity_Name, Subject_ID)
rm(CR_tbl_df)
summarise_each(grouped_data, funs(mean)) -> clean_tidy
rm(grouped_data)
View(clean_tidy)
View(clean_tidy)
View(clean_tidy)
grep("mean", clean_tidy[1,])
grep("mean", colnames(clean_tidy))
grep("std", colnames(clean_tidy))
source('C:/Users/cferguson/Desktop/Coursera/get_and_clean_data/mergeddata.R')
View(clean_tidy)
View(clean_tidy)
clean_tidy <- select(clean_tidy, -Activity)
View(clean_tidy)
?write.table
write.table(clean_tidy, "clean_tidy.txt", row.names=FALSE)
source('C:/Users/cferguson/Desktop/Coursera/get_and_clean_data/run_analysis.R')
x
x > 0
?exists
exists(x)
x <- 2
exists(x)
if(!exists(x))
y <- 3
exists("x")
if(exists(x)){
write.table(clean_tidy, "x", row.names=FALSE)
} else {
write.table(clean_tidy, "clean_tidy.txt", row.names=FALSE)
}
if(exists("x")){
write.table(clean_tidy, "x", row.names=FALSE)
} else {
write.table(clean_tidy, "clean_tidy.txt", row.names=FALSE)
}
